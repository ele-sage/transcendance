.friend requests:
    sent too

.Pong: use media/ instead of static/audio static/img
.Backend: oauth must not be able to change email

.Accept friendship: if users are connected, send connected notification to both
.Remove friend: "friend disconnected"

.plugger le frontend pong (sans backend)

----------------------------------------
Afficher notifications:
    .Réception messages (chat icon avec un nombre)
    .Demandes d'amis (nav)


----
Stop Pong JS quand quitte
Login:
Forms errors:
    .response field "error: currently "email", "non_field_errors"
    .Ajouter <p class="form-error"></p> par field avec erreur
    document.queryAll(".form-error"); // clear

Connect with oauth:
    


------------------------------------------------------------
Frontend:
    .save authentication token en RAM
    .l'envoyer au serveur à chaque request
    JWT: https://jwt.io/introduction
    Cookie


create_oauth_uri:
    .provide state to 42 and check if correct state is given back
    .pourquoi pas de authorize dialog? https://api.intra.42.fr/apidoc/guides/web_application_flow#scopes

.Chat avec amis / adversaire
.tests (selenium?)
.Secrets (Docker, Github)

-- Début ------------
.Choisir les modules (certains ont des dépendances mutuelles)
.Choisir les technologies
.Diviser les tâches

Choix des librairies:
.Existe-t-il une librairie pour ce qu'on fait?
.Est-ce que coder à la main est vraiment meilleur?
.Une librairie est-elle vraiment utile?


async def notify_target(room_name, user_id):
    target_ids = room_name.split('_')
    target_id = target_ids[0] if target_ids[0] != str(user_id) else target_ids[1]
    target = await get_user(target_id)
    if target is not None:
        if not await in_group(target, room_name):
            main_channel = await get_main_channel(target)
            if main_channel is not None:
                channel_layer = get_channel_layer()
                await channel_layer.send(main_channel, {
                    'type': 'notification',
                    'message': 'matchmaking',
                    'room_name': room_name
                })
        return True
    return False