bootstrap alert: when its removed before timeout, error

Logout:
    clear invites because they could become outdated.
    cancelSearchingMatch()


notifications:
    type: pong:
    room:
    id:
    description:
        searchingMatch: montrer que t'es entrain de search un match (pas afficher de recherche de matchs)
        matchRequest
        matchRefused
        opponentIngame
        opponentOffline


chat:
                     add: pas si friend
                  invite: pas si in game with

make error:
    docker-compose up --build
    [+] Building 12.9s (6/6) FINISHED                                        
    => [github-web internal] load build definition from Dockerfile     0.8s
    => => transferring dockerfile: 32B                                 0.0s
    => [github-nginx internal] load build definition from Dockerfile   0.9s
    => => transferring dockerfile: 32B                                 0.0s
    => [github-web internal] load .dockerignore                        0.9s
    => => transferring context: 2B                                     0.0s
    => [github-nginx internal] load .dockerignore                      1.0s
    => => transferring context: 2B                                     0.0s
    => ERROR [github-web internal] load metadata for docker.io/libra  11.7s
    => CANCELED [github-nginx internal] load metadata for docker.io/  10.1s
    ------
    > [github-web internal] load metadata for docker.io/library/python:3.9.18-alpine:
    ------
    failed to solve: rpc error: code = Unknown desc = failed to solve with frontend dockerfile.v0: failed to create LLB definition: failed to do request: Head "https://registry-1.docker.io/v2/library/python/manifests/3.9.18-alpine": net/http: TLS handshake timeout
    make: *** [start] Error 17
Après ça marche.
----------------------------------------------------

stats.load()
    with the username search userId using api.fetchRoute


.Pong: use media/ instead of static/audio static/img
.Backend: oauth must not be able to change email

.Accept friendship: if users are connected, send connected notification to both
.Remove friend: "friend disconnected"

.plugger le frontend pong (sans backend)

----------------------------------------
Afficher notifications:
    .Réception messages (chat icon avec un nombre)
    .Demandes d'amis (nav)


----
Stop Pong JS quand quitte
Login:
Forms errors:
    .response field "error: currently "email", "non_field_errors"
    .Ajouter <p class="form-error"></p> par field avec erreur
    document.queryAll(".form-error"); // clear

Connect with oauth:
    


------------------------------------------------------------
Frontend:
    .save authentication token en RAM
    .l'envoyer au serveur à chaque request
    JWT: https://jwt.io/introduction
    Cookie


create_oauth_uri:
    .provide state to 42 and check if correct state is given back
    .pourquoi pas de authorize dialog? https://api.intra.42.fr/apidoc/guides/web_application_flow#scopes

.Chat avec amis / adversaire
.tests (selenium?)
.Secrets (Docker, Github)

-- Début ------------
.Choisir les modules (certains ont des dépendances mutuelles)
.Choisir les technologies
.Diviser les tâches

Choix des librairies:
.Existe-t-il une librairie pour ce qu'on fait?
.Est-ce que coder à la main est vraiment meilleur?
.Une librairie est-elle vraiment utile?
