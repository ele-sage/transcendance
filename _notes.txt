.X boutons pendant play with anyone
.plus d'une alert à la fois (error)

.X Demande d'ami acceptée: liste d'amis pas mise à jour
.X Liste amis: enlever play si "in-game"

.from user search, block: UserChannelGroup matching query does not exist
.friend request counter: make a button
    : remove when answered friend request
.unfriended: friend stays in friend list


.mode release


.X menu drop down                 emi
.friend count style
.form fields autocomplete
.X empêcher de bloquer un user bloqué


.tester input fields            ele / emi
.token date d'expiration
.X utilisateur "en partie"


.X historique d'un autre joueur   franco


.oauth redirection avec token   marc-andré
.X chat empecher nouveaux messages d'utilisateur bloqué



.Module majeur : Utiliser un Framework en backend.
.Module mineur : Utiliser un framework ou toolkit en frontend.
.Module mineur : Utiliser une base de données pour le backend -et plus
.Module majeur : Joueurs à distance
.Module majeur : Implémentation de techniques 3D avancées

.Module majeur : Gestion d’utilisateurs standard, authentification et utilisateurs en tournois.
.Module majeur : Implémenter une authentification à distance
.Module majeur : Clavardage en direct

.Module mineur : Étendre la compatibilité des navigateurs web.

--------------------------------

match-history:
    on scroll bottom: receive new matches
    triggers, onwheel

tournament:
    .si quelqu'un quitte, on annule tout
     
    (quitter match: clearPongText)




start game: (key press, allow sounds)

backend: logout when already logged out

----------------------------------------------------

stats.load()
    with the username search userId using api.fetchRoute


.Pong: use media/ instead of static/audio static/img
.Backend: oauth must not be able to change email

.Accept friendship: if users are connected, send connected notification to both
.Remove friend: "friend disconnected"

.plugger le frontend pong (sans backend)

----------------------------------------
Afficher notifications:
    .Réception messages (chat icon avec un nombre)
    .Demandes d'amis (nav)

----
Stop Pong JS quand quitte
Login:
Forms errors:
    .response field "error: currently "email", "non_field_errors"
    .Ajouter <p class="form-error"></p> par field avec erreur
    document.queryAll(".form-error"); // clear

Connect with oauth:
    


------------------------------------------------------------
Frontend:
    .save authentication token en RAM
    .l'envoyer au serveur à chaque request
    JWT: https://jwt.io/introduction
    Cookie


create_oauth_uri:
    .provide state to 42 and check if correct state is given back
    .pourquoi pas de authorize dialog? https://api.intra.42.fr/apidoc/guides/web_application_flow#scopes

.Chat avec amis / adversaire
.tests (selenium?)
.Secrets (Docker, Github)

-- Début ------------
.Choisir les modules (certains ont des dépendances mutuelles)
.Choisir les technologies
.Diviser les tâches

Choix des librairies:
.Existe-t-il une librairie pour ce qu'on fait?
.Est-ce que coder à la main est vraiment meilleur?
.Une librairie est-elle vraiment utile?


----------------------------------------------------------------------------------------------------------------
Enlever “bind-mount volumes”
Both players will use the same keyboard. (a verifier)
Attack prevention: https://docs.djangoproject.com/en/5.0/topics/security/

1   ✅ Major module: Use a Framework as backend.
1.5 ❓ Minor module: Use a front-end framework or toolkit. (a verifier)
2   ✅ Minor module: Use a database for the backend -and more.
3   ❌ Major module: Standard user management, authentication, users across tournaments.
        A faire : User profiles display stats, such as wins and losses + view their online status.
                + Match History including 1v1 games, dates, and relevant details, accessible to logged-in users.
4   ✅ Major module: Implementing a remote authentication.
5   ✅ Major module: Remote players
6   ❌ Major module: Live Chat.
        A faire : The tournament system should be able to warn users expected for the next game.
7   ✅ Major module: Implementing Advanced 3D Techniques
7.5 ❓ Minor module: Expanding Browser Compatibility
